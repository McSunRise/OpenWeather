services:
  db:
    image: postgres:17
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  cache:
    image: redis:latest
    env_file:
      - .env
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    volumes:
      - ./redis.acl:/usr/local/etc/redis/redis.acl
    command: sh -c "
      echo 'user default off' > /usr/local/etc/redis/redis.acl && \
      echo \"user admin on >$REDIS_ADMIN_PASSWORD ~* &* +@all\" >> /usr/local/etc/redis/redis.acl && \
      echo \"user $REDIS_USER on >$REDIS_USER_PASSWORD ~* &* +@pubsub +@connection +@transaction +@set +@scripting +@read +@write\" >> /usr/local/etc/redis/redis.acl && \
      redis-server --aclfile /usr/local/etc/redis/redis.acl
      "

    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

  dist-task:
    build: .
    command: celery -A weatherproject.celery worker --loglevel=info
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "celery", "-A", "weatherproject", "status"]
      interval: 5s
      timeout: 3s
      retries: 5

  django-web:
    build: .
    container_name: django-docker
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
      dist-task:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "python manage.py check || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 10

volumes:
  postgres_data: